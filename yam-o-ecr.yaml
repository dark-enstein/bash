name: Build and Deploy Update
on:
  push:
    branches: [ develop ]
    paths-ignore:
    - k8s/dev/kustomization.yaml


jobs:
  build:
    name: dotpay-build
    runs-on: ubuntu-latest

    steps:
      - name: cancel previous run # in case of quick successions
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Package Jar file
        run: mvn install -U -Dmaven.test.skip=true

      - name: Upload Build artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/
          retention-days: 1 # do not retain the artifact more than a day because of storage limitation

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
  #      - name: Cache SonarQube packages
  #        uses: actions/cache@v1
  #        with:
  #          path: ~/.sonar/cache
  #          key: ${{ runner.os }}-sonar
  #          restore-keys: ${{ runner.os }}-sonar
  #      - name: Cache Maven packages
  #        uses: actions/cache@v1
  #        with:
  #          path: ~/.m2
  #          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #          restore-keys: ${{ runner.os }}-m2
  #      - name: Build and analyze
  #        env:
  #          PAT: ${{ secrets.PAT }}  # Needed to get PR information, if any
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  deploy:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.ref == 'refs/heads/develop'
    environment:
      name: dev
      url: https://auth.dev.dotpay.africa

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: target/

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWSS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEYY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to registry - AMAZON ECR  # Can also use BuildX here to optimize the performance later.
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: service-backend-authentication
          TAG: ${{github.sha}}

        run: |
          docker build --build-arg app_env=dev . --file docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TAG
      - name: Logout of amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
        

      - name: Update Kubernetes resources
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: service-backend-authentication
          TAG: ${{github.sha}}
        run: |
          cd k8s/dev
          kustomize edit set image service-backend-authentication=$ECR_REGISTRY/$ECR_REPOSITORY:$TAG
          cat kustomization.yaml
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bump docker tag"
      - name: Pushing to the protected branch 'protected'
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.PAT }}
          branch: develop
